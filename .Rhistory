eQTL.pi1_fdr <- pi1_est_fdr(brain.QTLs_by_dist, fdr_thres)
QTLs_in_OCR.df <- as.data.frame(fread(paste0(wd,'QTL_in_OCR/brain_eQTL_hg38_in_CN_peaks.bed')))
names(QTLs_in_OCR.df) <- c('chr','start','end','rsID')
QTLs_in_OCR.pval <- brain.QTLs_by_dist$pval[match(QTLs_in_OCR.df$rsID, brain.QTLs_by_dist$SNPid)]
QTL.random.pi1 <- get_pi1(QTLs_in_OCR.pval,0.5)
## Get a distribution
# random.pi1 <- rep(NA,1000)
# for (i in 1:1000){
#   rand.indx <- sample(length(eQTLs_in_OCR.pval),5000)
#   random.pi1[i] <- get_pi1(eQTLs_in_OCR.pval[rand.indx],0.5)
# }
eQTL.pi1_pval[length(pval_thres)+1,1] <- 'random'
eQTL.pi1_pval[length(pval_thres)+1,2] <- QTL.random.pi1
eQTL.pi1_fdr[length(fdr_thres)+1,1] <- 'random'
eQTL.pi1_fdr[length(fdr_thres)+1,2] <- QTL.random.pi1
cat('pi1 of random control:', QTL.random.pi1)
ASoC.adult_OCR <- as.data.frame(fread(paste0(wd,'QTL_in_OCR/ASoC_Glut20_in_adult_OCR.bed')))
View(ASoC.adult_OCR)
names(ASoC.adult_OCR) <- c('chr','start','end','rsID','FDR')
ASoC.adult_OCR.signif <- filter(ASoC.adult_OCR, FDR<0.05)
cat('Out of 5611 ASoC variants,',nrow(ASoC.adult_OCR.signif),'fall in adult brain OCRs.')
match.indx <- match(ASoC.adult_OCR.signif$rsID,brain.QTLs_by_dist$SNPid)
match.indx <- na.omit(match.indx)
QTL.adult.pi1 <- get_pi1(brain.QTLs_by_dist$pval[match.indx],0.5) # 0.4551551
eQTL.pi1_pval[length(pval_thres)+2,1] <- 'positive'
eQTL.pi1_pval[length(pval_thres)+2,2] <- QTL.adult.pi1
eQTL.pi1_fdr[length(fdr_thres)+2,1] <- 'positive'
eQTL.pi1_fdr[length(fdr_thres)+2,2] <- QTL.adult.pi1
cat('pi1 of', length(match.indx),'matched positive control SNPs:', QTL.adult.pi1)
torus.df <- read.delim(paste0(wd,'torus_result_table.txt'), header = T,row.names = 1)
kable(torus.df) %>% kable_styling(position = 'center',full_width = T)
setwd("~/Downloads/ASoC/QTL_enrich/github")
rmarkdown::render_site()
View(torus.df)
names(torus.df)[1]
names(torus.df)[1] <- 'log2(odds_ratio)'
geom_pointrange(torus.df, mapping = aes(x=))
torus.df <- read.delim(paste0(wd,'torus_result_table.txt'), header = T,row.names = 1)
names(torus.df)[1] <- 'log2(odds_ratio)'
torus.df <- read.delim(paste0(wd,'torus_result_table.txt'), header = T)
names(torus.df)[2] <- 'log2(odds_ratio)'
torus.df <- read.delim(paste0(wd,'torus_result_table.txt'), header = T)
geom_pointrange(torus.df, mapping = aes(y=type, x=log2.odds_ratio, xmin=low.CI, xmax=high.CI))
geom_pointrange(torus.df, mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI))
ggplot() + geom_pointrange(torus.df, mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI))
ggplot() + geom_pointrange(torus.df[1:5,], mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI))
ggplot() + geom_pointrange(torus.df[1:5,], mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI)) + theme_classic(axis.title.x='enrichment type')
ggplot() + geom_pointrange(torus.df[1:5,], mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI)) + theme(axis.title.x='type of enrichment')
ggplot() + geom_pointrange(torus.df[1:5,], mapping = aes(x=type, y=log2.odds_ratio, ymin=low.CI, ymax=high.CI)) + element_text(axis.title.x='type of enrichment')
ggplot() + geom_pointrange(torus.df[1:5,], mapping = aes(x=type, y=log2.odds_ratio,
ymin=low.CI, ymax=high.CI), fill="white")
rmarkdown::render_site()
rmarkdown::render_site()
torus.df <- read.delim(paste0(wd,'torus_result_table.txt'), header = T)
kable(torus.df) %>% kable_styling(position = 'center',full_width = T)
ggplot() + geom_pointrange(torus.df[1:6,], mapping = aes(x=type, y=log2.odds_ratio,
ymin=low.CI, ymax=high.CI))
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rm(brain.QTLs_by_dist)
qtl.signif <- as.data.frame(fread(paste0('~/Downloads/ASoC/QTL_enrich/Brain_',
'eQTL','s_Bonferroni.txt')))
tmp <- match(ASoC.signif$rsID,qtl.signif$SNPid)
ASoC.signif.indx <- na.omit(tmp)
qtl.signif$SNPid[ASoC.signif.indx][1:10]
rmarkdown::render_site()
qtl.signif$SNPid[ASoC.signif.indx][1:10]
match('rs6999898',ASoC.signif$rsID)
match('rs72651276',ASoC.signif$rsID)
ASoC <- read.delim('~/Downloads/ASoC/data/ASoC_20lines_Glut_list.txt')
ASoC.signif <- filter(ASoC,FDR < 0.05)
View(ASoC.signif)
qtl.signif <- as.data.frame(fread('~/Downloads/ASoC/QTL_enrich/Brain_eQTLs_Bonferroni.txt'))
match('rs17130766',ASoC.signif$rsID)
filter(ASoC.signif, rsID=='rs17130766')
alt_freq <- read.delim('~/Downloads/ASoC/data/ASoC_Glut20_signif_SNPs_EuroAF.txt', header = F)
View(alt_freq)
names(alt_freq) <- c('rsID','pos','alt_freq')
Alt <- alt_freq
rm(alt_freq)
ASoC.signif$alt_minor <- rep(NA,nrow(ASoC.signif))
for (i in 1:nrow(ASoC.signif)) {
snp.indx <- match(ASoC.signif$rsID[i],Alt$rsID)
if (!is.na(snp.indx)){
ASoC.signif$alt_minor[i] <- (Alt$alt_freq[snp.indx]<0.5)*1
}
}
View(Alt)
ASoC.signif$alt_minor <- rep(NA,nrow(ASoC.signif))
for (i in 1:nrow(ASoC.signif)) {
snp.indx <- match(ASoC.signif$rsID[i],Alt$rsID)
if (!is.na(snp.indx)){
ASoC.signif$alt_minor[i] <- Alt$alt_freq[snp.indx]<0.5
}
}
sum(!is.na(ASoC.signif$alt_minor))
write.table(ASoC.signif, file = '~/Downloads/ASoC/data/ASoC_Glut20_signif_w_minor.txt', quote = F, sep = '\t')
ASoC.signif <- na.omit(ASoC.signif)
tmp <- match(ASoC.signif$rsID,qtl.signif$SNPid)
ASoC.signif.indx <- na.omit(tmp)
asoc.fold.orig <- log10(ASoC.signif$ALT[!is.na(tmp)] / ASoC.signif$REF[!is.na(tmp)])
asoc.fold <- asoc.fold.orig * (ASoC.signif$alt_minor*2 - 1)
asoc.fold <- asoc.fold.orig * (ASoC.signif$alt_minor[!is.na(tmp)]*2 - 1)
asoc.fold.sign <- asoc.fold>0
qtl.spearman.sign <- qtl.spearman>0
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
cat('Number of concordant pairs:', num_same)
cat('\n')
cat('Number of discordant pairs:', num_diff)
qplot(asoc.fold, qtl.spearman, xlab = 'ASoC log10(Alt/Ref)',
ylab = paste(qtl.name,'Spearman Rho'))
qtl.spearman <- qtl.signif$SpearmanRho[ASoC.signif.indx]
asoc.fold.sign <- asoc.fold>0
qtl.spearman.sign <- qtl.spearman>0
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
cat('Number of concordant pairs:', num_same)
cat('\n')
cat('Number of discordant pairs:', num_diff)
qplot(asoc.fold, qtl.spearman, xlab = 'ASoC log10(Alt/Ref)',
ylab = paste(qtl.name,'Spearman Rho'))
qplot(asoc.fold, qtl.spearman, xlab = 'ASoC log10(Alt/Ref)',
ylab = paste('eQTL','Spearman Rho'))
ASoC.signif$sign <- ASoC.signif$alt_minor*2 - 1
ASoC.signif.matched <- ASoC.signif[!is.na(tmp),]
View(ASoC.signif.matched)
View(ASoC.signif)
ASoC.signif[62,]
ASoC.signif[ASoC.signif$rsID=='rs2027349',]
ASoC.signif[ASoC.signif$rsID=='rs2027349',11:12]
ASoC.signif[ASoC.signif$rsID=='rs2027349',11]=TRUE
ASoC.signif[ASoC.signif$rsID=='rs2027349',12]=1
ASoC.signif[ASoC.signif$rsID=='rs2027349',]
tmp <- match(ASoC.signif$rsID,qtl.signif$SNPid)
ASoC.signif.indx <- na.omit(tmp)
ASoC.signif.matched <- ASoC.signif[!is.na(tmp),]
asoc.fold <- log10(ASoC.signif.matched$ALT/ASoC.signif.matched$REF) * ASoC.signif.matched$sign
qtl.spearman <- qtl.signif$SpearmanRho[ASoC.signif.indx]
asoc.fold.sign <- asoc.fold>0
qtl.spearman.sign <- qtl.spearman>0
View(qtl.signif)
filter(qtl.signif, SNPid=='rs11653822')
filter(qtl.signif, SNPid=='rs2027349')
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
cat('Number of concordant pairs:', num_same)
cat('\n')
cat('Number of discordant pairs:', num_diff)
qplot(asoc.fold, qtl.spearman, xlab = 'ASoC log10(minor/major)',
ylab = paste(qtl.name,'Spearman Rho'))
qplot(asoc.fold, qtl.spearman, xlab = 'ASoC log10(minor/major)',
ylab = paste('eQTL','Spearman Rho'))
knitr::opts_chunk$set(fig.width=4, fig.height=4, fig.path='Figs/',
echo=TRUE, warning=FALSE, message=FALSE, comment = NA, fig.align = 'center')
ASoC.signif <- read.delim('~/Downloads/ASoC/data/ASoC_Glut20_signif_w_minor.txt')
ASoC.signif <- na.omit(ASoC.signif)
ASoC.signif$sign <- ASoC.signif$alt_minor * 2 - 1
qtl.dist <- as.data.frame(fread('~/Downloads/ASoC/QTL_enrich/Brain_eQTLs_by_dist.w_zscores.txt'))
sum(qtl.dist$pval<0.05)
sum(qtl.dist$pval<0.05)/nrow(qtl.dist)
sum(qtl.dist$pval<0.01)/nrow(qtl.dist)
qtl.signif <- filter(qtl.dist, pval<0.01)
tmp <- match(ASoC.signif$rsID,qtl.signif$SNPid)
ASoC.signif.indx <- na.omit(tmp)
ASoC.signif.matched <- ASoC.signif[!is.na(tmp),]
asoc.fold <- log10(ASoC.signif.matched$ALT/ASoC.signif.matched$REF) * ASoC.signif.matched$sign
qtl.spearman <- qtl.signif$SpearmanRho[ASoC.signif.indx]
asoc.fold.sign <- asoc.fold>0
qtl.spearman.sign <- qtl.spearman>0
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
cat('Number of concordant pairs:', num_same)
cat('\n')
cat('Number of discordant pairs:', num_diff)
qtl.spearman <-  qtl.signif$spearman[ASoC.signif.indx]
qtl.spearman.sign <- qtl.spearman>0
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
qtl.dist <- as.data.frame(fread('~/Downloads/ASoC/QTL_enrich/Brain_haQTLs_by_dist.w_zscores.txt'))
tmp <- match(ASoC.signif$rsID,qtl.signif$SNPid)
ASoC.signif.indx <- na.omit(tmp)
ASoC.signif.matched <- ASoC.signif[!is.na(tmp),]
asoc.fold <- log10(ASoC.signif.matched$ALT/ASoC.signif.matched$REF) * ASoC.signif.matched$sign
qtl.spearman <-  qtl.signif$spearman[ASoC.signif.indx]
asoc.fold.sign <- asoc.fold>0
qtl.spearman.sign <- qtl.spearman>0
num_same <- sum(asoc.fold.sign*qtl.spearman.sign) +
sum((!asoc.fold.sign)*(!qtl.spearman.sign))
num_diff <- length(asoc.fold.sign) - num_same
cat('Number of concordant pairs:', num_same)
cat('\n')
cat('Number of discordant pairs:', num_diff)
tmp <- as.data.frame(fread(paste0('~/Downloads/ASoC/QTL_enrich/Brain_',
'eQTL','s_Bonferroni.txt')))
wkdir <- '~/Downloads/ASoC/singlecell/'
source(paste0(wkdir,'github/code/cis_ash_scttest.R'))
summary.gRNA <- readRDS(paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.rds'))
load(paste0(wkdir, 'data/full.cisgenes_SNP.expanded.Rdata'))
View(full_genes.1Mb.expanded)
scz_loci <- read.delim('~/Downloads/ASoC/data/scRNA_seq_SNP_in_SCZ_list.txt',
header = F,col.names = c('rsID','locus'))
View(scz_loci)
match(scz_loci$locus,unique(full_genes.1Mb.expanded$locus))
scz_loci$locus[4]
scz_loci$locus[4] <- 'PCDHA123'
match(scz_loci$locus,unique(full_genes.1Mb.expanded$locus))
scz_1Mb.expanded <- filter(full_genes.1Mb.expanded, !is.na(match(locus,scz_loci$locus)))
View(scz_1Mb.expanded)
unique(scz_1Mb.expanded$locus)
ash_on_scttest(summary.gRNA,scz_1Mb.expanded,'gRNA')
library(ggplot2)
library(knitr)
library(kableExtra)
library(gridExtra)
library(ashr)
ash_on_scttest(summary.gRNA,scz_1Mb.expanded,'gRNA')
scz_200kb.expanded <- filter(full_genes.200kb.expanded, !is.na(match(locus,scz_loci$locus)))
unique(scz_200kb.expanded$locus)
ash_on_scttest(summary.gRNA,scz_200kb.expanded,'gRNA')
tb <- matrix(c(526,5085,8693,97414),nrow = 2)
tb
fisher.test(tb)
tb <- matrix(c(766,3618-766,97325800-766,3.2*10^9-97325800-3618+766),nrow = 2)
tb
tb <- matrix(c(766,97325800-766,3618-766,3.2*10^9-97325800-3618+766),nrow = 2)
tb
fisher.test(tb)
766*3.2*10^9/(97325800*3618)
0.2111/0.0304
p.enh <- 97325800/(3.2*10^9) # 0.03
p.prom <- 22891962/(3.2*10^9)
stats <- data.frame(matrix(c(766/3618,p.enh,737/3618,p.prom),nrow = 2))
names(stats) <- c('enhancer','promoter')
stats
stats[1,]/stats[2,]
log10(stats[1,]/stats[2,])
stats[3,] <- log10(stats[1,]/stats[2,])
View(stats)
row.names(stats) <- c('# of SNPs in the element','element coverage','log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
binom_enrich <- function(p.enh,p.prom,snp_enh,snp_prom,snp_total){
stats <- data.frame(matrix(c(snp_enh/snp_total,p.enh,
snp_prom/snp_total,p.prom),nrow = 2))
stats[3,] <- log10(stats[1,]/stats[2,])
names(stats) <- c('enhancer','promoter')
row.names(stats) <- c('# of SNPs in the element','element coverage',
'log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
}
binom_enrich(p.enh,p.prom,766,737,3618)
binom_enrich <- function(p.enh,p.prom,snp_enh,snp_prom,snp_total){
stats <- data.frame(matrix(c(snp_enh/snp_total,p.enh,
snp_prom/snp_total,p.prom),nrow = 2))
stats[3,] <- log10(stats[1,]/stats[2,])
names(stats) <- c('enhancer','promoter')
row.names(stats) <- c('# of SNPs in the element','element coverage',
'log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
test1 <- binom.test(snp_enh,snp_total,p.enh, alternative = 'greater')
cat('Binomial test p value (enhancer):',test1$p.value)
cat('\n')
test2 <- binom.test(snp_prom,snp_total,p.prom, alternative = 'greater')
cat('Binomial test p value (promoter):',test2$p.value)
}
binom_enrich(p.enh,p.prom,766,737,3618)
binom_enrich(p.enh,p.prom,455,415,2237)
p.enh.new <- 147566576/(3.2*10^9) # 0.046
p.prom.new <- 34972125/(3.2*10^9)
binom_enrich(p.enh.new,p.prom.new,646,749,2237)
binom_enrich(p.enh.new,p.prom.new,1040,1312,3618)
ASoC20 <- read.delim('~/Downloads/ASoC/data/ASoC_20lines_NPC_Glut_list.txt')
CN8 <- read.delim('~/Downloads/ASoC/GenElement_enrich/CN_8.txt')
CN8 <- CN8[,-8]
DN8 <- read.delim('~/Downloads/ASoC/GenElement_enrich/DN_8.txt')
DN8 <- DN8[,-8]
GA8 <- read.delim('~/Downloads/ASoC/GenElement_enrich/GA_8.txt')
GA8 <- GA8[,-c(4,5)]
names(GA8) <- names(CN8)
NSC8 <- read.delim('~/Downloads/ASoC/GenElement_enrich/NSC_8.txt')
NSC8 <- NSC8[,-8]
## ASoC enrichment of genomic elements ####
ASoC20 <- read.delim('~/Downloads/ASoC/data/ASoC_20lines_Glut_list.txt')
CN8.sig <- filter(CN8, FDR<0.05)$rsID
DN8.sig <- filter(DN8, FDR<0.05)$rsID
GA8.sig <- filter(GA8, FDR<0.05)$ID
NSC8.sig <- filter(NSC8, FDR<0.05)$rsID
GA8.sig <- filter(GA8, FDR<0.05)$rsID
## Sharing cell types ####
tmp1 <- intersect(CN8.sig,DN8.sig,GA8.sig)
tmp.cd <- intersect(CN8.sig,DN8.sig)
tmp1 <- intersect(tmp.cd,GA8.sig)
tmp2 <- intersect(tmp.cd,NSC.sig)
tmp2 <- intersect(tmp.cd,NSC8.sig) # CN,DN,NSC
tmp.gn <- intersect(GA8.sig,NSC8.sig)
tmp3 <- intersect(tmp.gn,CN8.sig) # CN,GA,NSC
tmp4 <-  intersect(tmp.gn,DN8.sig)
shared.3 <- unique(c(tmp1,tmp2,tmp3,tmp4))
filter(CN8, rsID==shared.3[1])
filter(DN8, rsID==shared.3[1])
filter(GA8, rsID==shared.3[1])
filter(NSC8, rsID==shared.3[1])
combined <- rbind(CN8,DN8,GA8,NSC8)
shared.3.df <- filter(combined,!is.na(match(rsID,shared.3)))
shared.3.df <- shared.3.df[,1:3]
shared.3.df <- unique(shared.3.df)
View(stats)
View(shared.3.df)
shared.3.df <- mutate(shared.3.df, start=POS-1)
shared.3.df <- shared.3.df[,c(1,4,2,3)]
write.table(shared.3.df, file = '~/Downloads/ASoC/GenElement_enrich/ASoC_variants.shared3.bed',
sep = '\t',col.names = F,row.names = F,quote = F)
p.enh <- 97325800/(3.2*10^9) # 0.03
p.prom <- 22891962/(3.2*10^9) # 0.007
p.enh.new <- 147566576/(3.2*10^9) # 0.046
p.prom.new <- 34972125/(3.2*10^9) # 0.011
coverage <- data.frame(matrix(c(p.prom,p.prom.new,p.enh,p.enh.new),nrow = 2))
names(coverage) <- c('promoter coverage','enhancer coverage')
row.names(coverage) <- c('15-states annotation','25-states annotation')
print(kable(coverage,digits = 4) %>% kable_styling(position = 'center'))
p.enh <- 97325800/(3.2*10^9) # 0.03
p.prom <- 22891962/(3.2*10^9) # 0.007
p.enh.new <- 147566576/(3.2*10^9) # 0.046
p.prom.new <- 34972125/(3.2*10^9) # 0.011
coverage <- data.frame(matrix(c(p.prom,p.prom.new,p.enh,p.enh.new),nrow = 2))
names(coverage) <- c('promoter coverage','enhancer coverage')
row.names(coverage) <- c('15-states annotation','25-states annotation')
print(kable(coverage,digits = 4) %>% kable_styling(position = 'center'))
binom_enrich <- function(p.enh,p.prom,snp_enh,snp_prom,snp_total){
stats <- data.frame(matrix(c(snp_enh/snp_total,p.enh,
snp_prom/snp_total,p.prom),nrow = 2))
stats[3,] <- log10(stats[1,]/stats[2,])
names(stats) <- c('enhancer','promoter')
row.names(stats) <- c('# of SNPs in the element','element coverage',
'log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
test1 <- binom.test(snp_enh,snp_total,p.enh, alternative = 'greater')
cat('Binomial test p value (enhancer):',test1$p.value,'; ')
test2 <- binom.test(snp_prom,snp_total,p.prom, alternative = 'greater')
cat('binomial test p value (promoter):',test2$p.value,'.')
return(stats[3,])
}
fold.spec15 <- binom_enrich(p.enh,p.prom,766,737,3618)
View(fold.spec15)
binom_enrich <- function(p.enh,p.prom,snp_enh,snp_prom,snp_total){
stats <- data.frame(matrix(c(snp_enh/snp_total,p.enh,
snp_prom/snp_total,p.prom),nrow = 2))
stats[3,] <- log10(stats[1,]/stats[2,])
fold_enrich <- log10(stats[1,]/stats[2,])
names(stats) <- c('enhancer','promoter')
row.names(stats) <- c('# of SNPs in the element','element coverage',
'log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
test1 <- binom.test(snp_enh,snp_total,p.enh, alternative = 'greater')
cat('Binomial test p value (enhancer):',test1$p.value,'; ')
test2 <- binom.test(snp_prom,snp_total,p.prom, alternative = 'greater')
cat('binomial test p value (promoter):',test2$p.value,'.')
return(fold_enrich)
}
fold.spec15 <- binom_enrich(p.enh,p.prom,766,737,3618)
View(fold.spec15)
binom_enrich <- function(p.enh,p.prom,snp_enh,snp_prom,snp_total){
stats <- data.frame(matrix(c(snp_enh/snp_total,p.enh,
snp_prom/snp_total,p.prom),nrow = 2))
names(stats) <- c('enhancer','promoter')
fold_enrich <- log10(stats[1,]/stats[2,])
stats[3,] <- fold_enrich
row.names(stats) <- c('# of SNPs in the element','element coverage',
'log10(fold_enrich)')
print(kable(stats,digits = 4) %>% kable_styling(position = 'center'))
test1 <- binom.test(snp_enh,snp_total,p.enh, alternative = 'greater')
cat('Binomial test p value (enhancer):',test1$p.value,'; ')
test2 <- binom.test(snp_prom,snp_total,p.prom, alternative = 'greater')
cat('binomial test p value (promoter):',test2$p.value,'.')
return(fold_enrich)
}
fold.spec15 <- binom_enrich(p.enh,p.prom,766,737,3618)
View(fold.spec15)
fold.spec25 <- binom_enrich(p.enh.new,p.prom.new,1040,1312,3618)
fold.spec_new15 <- binom_enrich(p.enh,p.prom,455,415,2237)
fold.spec_new25 <- binom_enrich(p.enh.new,p.prom.new,646,749,2237)
fold.shared15 <- binom_enrich(p.enh,p.prom,43,101,256)
fold.shared25 <- binom_enrich(p.enh.new,p.prom.new,43,158,256)
fold.df1 <- rbind(fold.spec15,fold.shared15)
View(fold.df1)
fold.df1 <- rbind(fold.shared15,fold.spec15)
fold.df1 <- cbind(fold.shared15,fold.spec15)
View(fold.df1)
View(fold.df1)
fold.df1 <- as.data.frame(t(rbind(fold.shared15,fold.spec15)))
View(fold.df1)
View(fold.df1)
View(fold.spec15)
plot(as.numeric(fold.spec15))
points(x=c(1,2),y=as.numeric(fold.shared15),pch=20)
plot(as.numeric(fold.spec15),ylim = c(0.5,2))
points(x=c(1,2),y=as.numeric(fold.shared15),pch=20)
points(x=c(1,2),y=as.numeric(fold.spec_new15),pch=15)
plot(as.numeric(fold.spec15),ylim = c(0.5,2))
points(x=c(1,2),y=as.numeric(fold.spec_new15),pch=20)
points(x=c(1,2),y=as.numeric(fold.shared15),pch=15)
fold.df1 <- rbind(fold.shared15,fold.spec_new15,fold.spec15)
View(fold.df1)
plot(fold.df1$enhancer,ylim = c(0.5,2))
points(x=1:3,y=fold.df1$promoter,pch=11)
plot(fold.df1$enhancer,ylim = c(0.5,2),pch=16)
points(x=1:3,y=fold.df1$promoter,pch=17)
fold.df2 <- rbind(fold.shared25,fold.spec_new25,fold.spec25)
plot(fold.df2$enhancer,ylim = c(0.5,2),pch=16)
points(x=1:3,y=fold.df2$promoter,pch=17)
points(x=1:3,y=fold.df2$enhancer,pch=16,col='turqoise')
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17),col='cyan4'
points(x=1:3,y=fold.df2$promoter,pch=17,col='cyan4')
legend(x=2.5,y=2,legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'))
legend(x=2.2,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.8)
fold.df1 <- rbind(fold.shared15,fold.spec_new15,fold.spec15)
plot(fold.df1$enhancer,ylim = c(0.5,2),pch=16,ylab = 'log10(fold_enrichment)')
points(x=1:3,y=fold.df1$promoter,pch=17)
fold.df2 <- rbind(fold.shared25,fold.spec_new25,fold.spec25)
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17)
legend(x=2.5,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.8)
plot(fold.df1$enhancer,ylim = c(0.5,2), ylab = 'log10(fold_enrichment)',
pch=16, col = 'brown1')
points(x=1:3,y=fold.df1$promoter, pch=17, col = 'brown1')
fold.df2 <- rbind(fold.shared25,fold.spec_new25,fold.spec25)
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17)
legend(x=2.5,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.8)
plot(fold.df1$enhancer,ylim = c(0.5,2), ylab = 'log10(fold_enrichment)',
pch=16, col = 'brown1')
points(x=1:3,y=fold.df1$promoter, pch=17, col = 'brown1')
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17,col='cyan4')
legend(x=2.5,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.8)
plot(fold.df1$enhancer,ylim = c(0.5,2), ylab = 'log10(fold_enrichment)',
pch=16, col = 'brown1')
points(x=1:3,y=fold.df1$promoter, pch=17, col = 'brown1')
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17,col='cyan4')
legend(x=2.5,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.9, bty = 'n')
plot(fold.df1$enhancer,ylim = c(0.5,2), ylab = 'log10(fold_enrichment)',
pch=16, col = 'brown1')
points(x=1:3,y=fold.df1$promoter, pch=17, col = 'brown1')
points(x=1:3,y=fold.df2$enhancer,pch=16,col='cyan4')
points(x=1:3,y=fold.df2$promoter,pch=17,col='cyan4')
legend("bottomright",x=2.5,y=2,
legend = c('15-enhancer','15-promoter','25-enhancer','25-promoter'),
pch = c(16,17,16,17), col = c('brown1','brown1','cyan4','cyan4'),
cex = 0.9, bty = 'n')
rep(c('shared','specific_2','specific_1'),each = 4)
rep(c('shared','specific_2','specific_1'),time = 4)
fold.ggplot <- data.frame(snp.type =
rep(c('shared','specific_2','specific_1'),time = 4))
fold.ggplot$fold <- c(fold.df1$enhancer,fold.df1$promoter,
fold.df2$enhancer,fold.df2$promoter)
View(fold.ggplot)
fold.ggplot$annotation <- rep(c('15-enhancer','15-promoter',
'25-enhancer','25-promoter'),each = 3)
factor(fold.ggplot$snp.type)
factor(fold.ggplot$snp.type,levels = c('shared','specific_2','specific_1'))
factor(fold.ggplot$annotation)
fold.ggplot$snp.type <- factor(fold.ggplot$snp.type,
levels = c('shared','specific_2','specific_1'))
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, fill=factor(annotation))) +
geom_point()
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=factor(annotation))) +
geom_point()
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=factor(annotation))) +
geom_point(size = 4)
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, shape=factor(annotation))) +
geom_point(size = 4)
fold.ggplot$annotation <- rep(c('enhancer','promoter',
'enhancer','promoter'),each = 3)
fold.ggplot$model <- rep(c('15-state','25-state'),each = 6)
factor(fold.ggplot$model)
factor(fold.ggplot$annotation)
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=factor(model), shape=factor(annotation))) +
geom_point(size = 4)
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=model, shape=annotation)) +
geom_point(size = 4) + labs(x = 'ASoC SNP type',y = 'log10(fold of enrichment)')
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=model, shape=annotation)) +
geom_point(size = 4) + labs(x = 'ASoC SNP type',y = 'log10(fold of enrichment)') +
theme(axis.text=element_text(size=12))
ggplot(data = fold.ggplot, aes(x=snp.type,y=fold, color=model, shape=annotation)) +
geom_point(size = 4) + labs(x = 'ASoC SNP type',y = 'log10(fold of enrichment)') +
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold"))
rmarkdown::render_site('ASoC_genomic_elements.enrich.Rmd')
rmarkdown::render_site('index.Rmd')
rmarkdown::render_site('index.Rmd')
